{
  "uid" : "79d323d94f09dd3a",
  "name" : "Get full list of games",
  "fullName" : "tests.test_games.TestGames#test_get_full_list_of_games",
  "historyId" : "e5a333c390550ae6fc50838ae298b460",
  "time" : {
    "start" : 1742205446426,
    "stop" : 1742205448835,
    "duration" : 2409
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: {'code': 401, 'message': 'security requirements failed: authentication failed, please set correct \"Bearer\" header'}",
  "statusTrace" : "self = <test_games.TestGames object at 0x7fcceb294cd0>\n\n    @pytest.mark.smoke\n    @pytest.mark.regress\n    @allure.title(\"Get full list of games\")\n    def test_get_full_list_of_games(self):\n>       self.api_games.get_list_of_games()\n\ntests/test_games.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.games.api_games.GamesAPI object at 0x7fcceb3122f0>\n\n    @allure.step(\"Get full list of games\")\n    def get_list_of_games(self):\n        response = requests.get(\n            url=self.endpoints.get_games,\n            headers=self.headers.basic,\n        )\n>       assert response.status_code == 200, response.json()\nE       AssertionError: {'code': 401, 'message': 'security requirements failed: authentication failed, please set correct \"Bearer\" header'}\n\nservices/games/api_games.py:22: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1742205446424,
      "stop" : 1742205446425,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_method_fixture_TestGames",
    "time" : {
      "start" : 1742205446425,
      "stop" : 1742205446425,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: {'code': 401, 'message': 'security requirements failed: authentication failed, please set correct \"Bearer\" header'}",
    "statusTrace" : "self = <test_games.TestGames object at 0x7fcceb294cd0>\n\n    @pytest.mark.smoke\n    @pytest.mark.regress\n    @allure.title(\"Get full list of games\")\n    def test_get_full_list_of_games(self):\n>       self.api_games.get_list_of_games()\n\ntests/test_games.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <services.games.api_games.GamesAPI object at 0x7fcceb3122f0>\n\n    @allure.step(\"Get full list of games\")\n    def get_list_of_games(self):\n        response = requests.get(\n            url=self.endpoints.get_games,\n            headers=self.headers.basic,\n        )\n>       assert response.status_code == 200, response.json()\nE       AssertionError: {'code': 401, 'message': 'security requirements failed: authentication failed, please set correct \"Bearer\" header'}\n\nservices/games/api_games.py:22: AssertionError",
    "steps" : [ {
      "name" : "Get full list of games",
      "time" : {
        "start" : 1742205446426,
        "stop" : 1742205448834,
        "duration" : 2408
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: {'code': 401, 'message': 'security requirements failed: authentication failed, please set correct \"Bearer\" header'}\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/API_Auto/API_Auto/services/games/api_games.py\", line 22, in get_list_of_games\n    assert response.status_code == 200, response.json()\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestGames::0",
    "time" : {
      "start" : 1742205448872,
      "stop" : 1742205448872,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Administration"
  }, {
    "name" : "feature",
    "value" : "Games"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_games"
  }, {
    "name" : "subSuite",
    "value" : "TestGames"
  }, {
    "name" : "host",
    "value" : "fv-az1377-740"
  }, {
    "name" : "thread",
    "value" : "2598-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_games"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 4,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "5180eace80a5f93a",
        "reportUrl" : "https://AntonAlisevich.github.io/API_Auto/24/#testresult/5180eace80a5f93a",
        "status" : "passed",
        "time" : {
          "start" : 1741967931583,
          "stop" : 1741967934359,
          "duration" : 2776
        }
      }, {
        "uid" : "e9dd896199454da6",
        "reportUrl" : "https://AntonAlisevich.github.io/API_Auto/23/#testresult/e9dd896199454da6",
        "status" : "passed",
        "time" : {
          "start" : 1741966090827,
          "stop" : 1741966094278,
          "duration" : 3451
        }
      }, {
        "uid" : "a9496036df363e98",
        "reportUrl" : "https://AntonAlisevich.github.io/API_Auto/22/#testresult/a9496036df363e98",
        "status" : "passed",
        "time" : {
          "start" : 1741964594650,
          "stop" : 1741964601060,
          "duration" : 6410
        }
      }, {
        "uid" : "102a965b528e468e",
        "reportUrl" : "https://AntonAlisevich.github.io/API_Auto/21/#testresult/102a965b528e468e",
        "status" : "passed",
        "time" : {
          "start" : 1741964043328,
          "stop" : 1741964046268,
          "duration" : 2940
        }
      } ]
    },
    "tags" : [ "regress", "smoke" ]
  },
  "source" : "79d323d94f09dd3a.json",
  "parameterValues" : [ ]
}